[
	{ "name" : "com.datical.liquibase.ext.util.RefactoringUtils", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.util.ObjectSqlFileUtil", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.util.CachedQueryUtil", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.command.RollbackOneChangeSetCommand$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.command.RollbackOneUpdateCommand", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.command.FormattedDiffCommand", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.command.RollbackOneUpdateCommand$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.command.RollbackOneChangeSetCommand", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.command.FormattedDiffCommand$DiffFormat", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.SqlPlusRunner", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.license.LicenseCheckingChangeGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.license.LicenseCheckingSnapshotGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.license.LicenseValidationChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.AbstractMissingStoredLogicChangeGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.AbstractStoredDatabaseLogicSnapshotGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.storedproc.PostgresStoredProcedureSnapshotGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.storedproc.StoredProcedureSnapshotGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.storedproc.MySQLStoredProcedureSnapshotGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.storedproc.UnexpectedStoredProcedureChangeGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.storedproc.ChangedStoredProcedureChangeGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.storedproc.ChangedStoredProcedureExternalFileChangeGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.storedproc.MissingStoredProcedureChangeGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.storedproc.MissingStoredProcedureExternalFileChangeGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.AbstractUnexpectedStoredLogicChangeGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.trigger.MissingTriggerExternalFileChangeGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.trigger.ChangedTriggerExternalFileChangeGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.trigger.postgres.PostgresTriggerSnapshotGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.trigger.ChangedTriggerChangeGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.trigger.change.CreateTriggerGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.trigger.change.DisableTriggerStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.trigger.change.DropTriggerGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.trigger.change.EnableTriggerStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.trigger.change.EnableTriggerChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.trigger.change.CreateTriggerChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.trigger.change.RenameTriggerStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.trigger.change.CreateTriggerStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.trigger.change.RenameTriggerChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.trigger.change.DisableTriggerGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.trigger.change.RenameTriggerGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.trigger.change.DropTriggerStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.trigger.change.DropTriggerChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.trigger.change.EnableTriggerGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.trigger.change.DisableTriggerChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.trigger.MissingTriggerChangeGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.trigger.TriggerSnapshotGenerator$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.trigger.Trigger", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.trigger.UnexpectedTriggerChangeGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.trigger.TriggerSnapshotGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.checkconstraint.CheckConstraintSnapshotGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.checkconstraint.CheckConstraintSnapshotGenerator$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.checkconstraint.postgres.PostgresCheckConstraintSnapshotGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.checkconstraint.CheckConstraintComparator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.checkconstraint.change.AddCheckConstraintGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.checkconstraint.change.DropCheckConstraintGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.checkconstraint.change.EnableCheckConstraintChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.checkconstraint.change.AddCheckConstraintChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.checkconstraint.change.DropCheckConstraintChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.checkconstraint.change.EnableCheckConstraintStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.checkconstraint.change.DisableCheckConstraintStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.checkconstraint.change.EnableCheckConstraintGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.checkconstraint.change.AddCheckConstraintStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.checkconstraint.change.DisableCheckConstraintChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.checkconstraint.change.DropCheckConstraintStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.checkconstraint.change.DisableCheckConstraintGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.checkconstraint.ChangedCheckConstraintChangeGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.checkconstraint.UnexpectedCheckConstraintChangeGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.checkconstraint.MissingCheckConstraintChangeGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.checkconstraint.CheckConstraintSnapshotGenerator$SqlExt", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.checkconstraint.CheckConstraint", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.StoredLogicComparator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.AbstractChangedStoredLogicChangeGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.AbstractStoredDatabaseLogicSnapshotGenerator$2", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.function.MissingFunctionChangeGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.function.ChangedFunctionExternalFileChangeGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.function.postgres.EDBPostgresFunctionSnapshotGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.function.postgres.PostgresFunctionSnapshotGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.function.ChangedFunctionChangeGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.function.change.DropFunctionGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.function.change.CreateFunctionGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.function.change.CreateFunctionChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.function.change.DropFunctionStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.function.change.DropFunctionChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.function.change.CreateFunctionStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.function.FunctionSnapshotGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.function.mysql.MySQLFunctionSnapshotGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.function.UnexpectedFunctionChangeGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.function.Function", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.function.MissingFunctionExternalFileChangeGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.AbstractStoredDatabaseLogicSnapshotGenerator$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.databasepackage.DatabasePackageBody", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.databasepackage.MissingPackageChangeGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.databasepackage.PackageBodySnapshotGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.databasepackage.MissingPackageExternalFileChangeGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.databasepackage.PackageSnapshotGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.databasepackage.ChangedPackageBodyChangeGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.databasepackage.ChangedPackageBodyExternalFileChangeGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.databasepackage.UnexpectedPackageChangeGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.databasepackage.change.CreatePackageBodyStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.databasepackage.change.DropPackageBodyStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.databasepackage.change.CreatePackageBodyChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.databasepackage.change.CreatePackageStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.databasepackage.change.DropPackageStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.databasepackage.change.DropPackageBodyChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.databasepackage.change.CreatePackageGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.databasepackage.change.CreatePackageBodyGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.databasepackage.change.DropPackageBodyGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.databasepackage.change.DropPackageGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.databasepackage.change.DropPackageChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.databasepackage.change.CreatePackageChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.databasepackage.ChangedPackageExternalFileChangeGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.databasepackage.UnexpectedPackageBodyChangeGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.databasepackage.ChangedPackageChangeGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.databasepackage.DatabasePackage", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.databasepackage.MissingPackageBodyChangeGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.storedlogic.databasepackage.MissingPackageBodyExternalFileChangeGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.parser.LiquibaseProNamespaceDetails", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.changelog.filter.DeploymentIdFilter", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.changelog.filter.SingleChangeSetFilter", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.config.LiquibaseProConfiguration", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.diff.FormattedDiffSerializer", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.diff.FormattedDiffSerializer$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.diff.FormattedDiffDatabase", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.diff.FormattedDiffSerializer$2", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.diff.FormattedDiffObject", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.diff.FormattedDiffModel", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.diff.FormattedDiffDatabases", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.diff.AbstractFormattedDiffSerializable", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.diff.FormattedChangeObject", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.database.jvm.ProJdbcConnection", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.appdba.markunused.change.MarkUnusedGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.appdba.markunused.change.MarkUnusedStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.appdba.markunused.change.MarkUnsedChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.appdba.diff.output.changelog.UnexpectedColumnChangeGeneratorAppDBA", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.appdba.diff.compare.SynonymComparator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.appdba.sqlplus.change.exception.DaticalSpErrorLogException", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.appdba.synonym.MissingSynonymChangeGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.appdba.synonym.Synonym", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.appdba.synonym.UnexpectedSynonymChangeGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.appdba.synonym.change.CreateSynonymStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.appdba.synonym.change.DropSynonymGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.appdba.synonym.change.DropSynonymChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.appdba.synonym.change.CreateSynonymChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.appdba.synonym.change.CreateSynonymGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.appdba.synonym.change.DropSynonymStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.appdba.synonym.SynonymSnapshotGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.appdba.synonym.ChangedSynonymChangeGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.datical.liquibase.ext.OracleSqlPlusExecutor", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.Liquibase$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.dbdoc.ColumnWriter", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.dbdoc.HTMLWriter", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.dbdoc.DBDocUtil", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.dbdoc.AuthorWriter", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.dbdoc.TableWriter", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.dbdoc.RecentChangesWriter", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.dbdoc.PendingChangesWriter", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.dbdoc.ChangeLogListWriter", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.dbdoc.AuthorListWriter", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.dbdoc.ChangeLogWriter", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.dbdoc.TableListWriter", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.dbdoc.HTMLListWriter", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.dbdoc.PendingSQLWriter", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.common.datatype.DataTypeWrapper", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.Liquibase$3", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.Liquibase$5", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.AbstractExtensibleObject", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.ExtensibleObjectAttribute", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.hub.HubServiceFactory$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.hub.LiquibaseHubRedirectException", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.hub.LiquibaseHubException", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.hub.HubServiceFactory$FallbackHubService", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.hub.HubUpdater", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.hub.LiquibaseHubObjectNotFoundException", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.hub.HubService", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.hub.model.HubRegisterResponse", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.hub.model.Operation$OperationStatus", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.hub.model.HubLink", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.hub.model.OperationChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.hub.model.Project", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.hub.model.Organization", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.hub.model.HubModel", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.hub.model.OperationEvent", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.hub.model.HubRegister", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.hub.model.OperationEvent$OperationEventLog", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.hub.model.HubUser", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.hub.model.OperationChangeEvent", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.hub.model.ListResponse", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.hub.model.Connection", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.hub.model.OperationEvent$OperationEventStatus", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.hub.model.HubChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.hub.model.Operation", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.hub.model.HubChangeLog", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.hub.LiquibaseHubUserException", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.hub.HubServiceFactory", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.hub.core.StandardHubService", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.hub.core.StandardHubService$HubLinkRequest", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.hub.core.HttpClient$HubRepresenter", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.hub.core.MockHubService", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.hub.core.HttpClient", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.hub.LiquibaseHubSecurityException", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.hub.listener.HubChangeExecListener", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.Liquibase$4", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.NetUtil", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.beans.DefaultBeanIntrospector", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.beans.FluentPropertyBeanIntrospector", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.beans.BeanIntrospector", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.beans.IntrospectionContext", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.beans.PropertyUtils", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.CollectionUtil", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.Validate", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.JdbcUtils", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.file.IOCase", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.file.FilenameUtils", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.BooleanUtils", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.StringClauses$ClauseIterator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.SpringBootFatJar", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.StringClauses$Comment", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.StringClauses$Delimiter", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.DependencyUtil$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.DependencyUtil$GraphNode", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.FileUtil", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.ExpressionMatcher", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.XMLUtil", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.StringUtil$ToStringFormatter", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.ISODateFormat", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.StringClauses", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.LiquibaseUtil", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.StreamUtil", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.ui.SwingUIFacade", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.ui.UIFactory", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.ui.UIFacade", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.SqlParser", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.DependencyUtil", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.grammar.SimpleSqlGrammarConstants", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.grammar.TokenMgrError", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.grammar.SimpleCharStream", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.grammar.Token", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.grammar.ParseException", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.grammar.SimpleSqlGrammarTokenManager", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.grammar.SimpleSqlGrammar", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.ObjectUtil", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.StringUtil$StringUtilFormatter", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.BooleanParser", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.SmartMap", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.StringClauses$LiteralClause", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.DependencyUtil$DependencyGraph", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.xml.DefaultXmlWriter", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.xml.XmlResourceBundleControl", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.xml.XMLResourceBundle", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.xml.XmlWriter", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.StringClauses$Whitespace", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.MD5Util", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.csv.opencsv.CSVIterator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.csv.opencsv.stream.reader.LineReader", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.csv.opencsv.CSVParser$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.csv.opencsv.enums.CSVReaderNullFieldIndicator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.csv.opencsv.CSVReader", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.csv.opencsv.CSVParser", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.csv.opencsv.CSVWriter", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.csv.opencsv.bean.CsvToBean", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.csv.opencsv.bean.AbstractCSVToBean", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.csv.opencsv.bean.MappingStrategy", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.csv.opencsv.bean.ColumnPositionMappingStrategy", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.csv.opencsv.bean.CsvToBeanFilter", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.csv.opencsv.bean.BeanField", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.csv.opencsv.bean.HeaderColumnNameTranslateMappingStrategy", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.csv.opencsv.bean.CsvBind", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.csv.opencsv.bean.HeaderColumnNameMappingStrategy", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.csv.CSVReader", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.csv.CSVWriter", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.NowAndTodayUtil", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.StringUtil", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.StringUtil$DefaultFormatter", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.RegexMatcher", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.SqlUtil", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.DependencyUtil$NodeValueListener", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.NumberUtils", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.util.BomAwareInputStream", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.Scope$ScopedRunnerWithReturn", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.configuration.ConfigurationValueProvider", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.configuration.GlobalConfiguration", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.configuration.ConfigurationContainer", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.configuration.AbstractConfigurationContainer$ConfigurationContainer", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.configuration.HubConfiguration", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.configuration.LiquibaseConfiguration", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.configuration.ConfigurationProperty", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.configuration.ConfigurationValueHandler", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.configuration.AbstractConfigurationContainer", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.configuration.SystemPropertyProvider", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.Labels", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sql.visitor.PrependSqlVisitor", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sql.visitor.SqlVisitorFactory", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sql.visitor.SqlVisitor", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sql.visitor.AbstractSqlVisitor", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sql.visitor.ReplaceSqlVisitor", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sql.visitor.AppendSqlVisitor", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sql.visitor.RegExpReplaceSqlVisitor", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sql.Sql", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sql.UnparsedSql", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sql.CallableSql", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sql.SingleLineComment", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.command.CommandValidationErrors", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.command.CommandResult", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.command.CommandFactory$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.command.LiquibaseCommand", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.command.AbstractSelfConfiguratingCommand", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.command.AbstractCommand", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.command.CommandFactory", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.command.CommandExecutionException", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.command.core.GenerateChangeLogCommand", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.command.core.RegisterChangeLogCommand", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.command.core.SnapshotCommand$SnapshotCommandResult", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.command.core.HistoryCommand$DeploymentDetails", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.command.core.DeactivateChangeLogCommand", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.command.core.ExecuteSqlCommand", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.command.core.DropAllCommand", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.command.core.RegisterChangeLogCommand$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.command.core.SnapshotCommand", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.command.core.DiffToChangeLogCommand", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.command.core.DiffCommand", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.command.core.HistoryCommand", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.command.core.SyncHubCommand", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.command.core.HistoryCommand$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.SingletonObject", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.precondition.FailedPrecondition", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.precondition.Conditional", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.precondition.CustomPrecondition", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.precondition.AbstractPrecondition", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.precondition.CustomPreconditionWrapper", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.precondition.ErrorPrecondition", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.precondition.PreconditionLogic", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.precondition.PreconditionFactory", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.precondition.Precondition", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.precondition.core.DBMSPrecondition", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.precondition.core.ChangeSetExecutedPrecondition", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.precondition.core.PreconditionContainer$ErrorOption", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.precondition.core.PreconditionContainer", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.precondition.core.PreconditionContainer$OnSqlOutputOption", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.precondition.core.TableExistsPrecondition", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.precondition.core.SqlPrecondition", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.precondition.core.RowCountPrecondition", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.precondition.core.ColumnExistsPrecondition", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.precondition.core.OrPrecondition", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.precondition.core.PreconditionContainer$FailOption", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.precondition.core.ChangeLogPropertyDefinedPrecondition", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.precondition.core.PrimaryKeyExistsPrecondition", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.precondition.core.ObjectQuotingStrategyPrecondition", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.precondition.core.TableIsEmptyPrecondition", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.precondition.core.ViewExistsPrecondition", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.precondition.core.RunningAsPrecondition", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.precondition.core.ForeignKeyExistsPrecondition", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.precondition.core.NotPrecondition", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.precondition.core.AndPrecondition", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.precondition.core.SequenceExistsPrecondition", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.precondition.core.IndexExistsPrecondition", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.Liquibase$14$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.io.EmptyLineAndCommentSkippingInputStream", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.Liquibase$13", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.pro.license.keymgr.d", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.pro.license.keymgr.b", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.pro.license.keymgr.c", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.pro.license.keymgr.e", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.pro.license.keymgr.e$4", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.pro.license.keymgr.a", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.pro.license.keymgr.e$2", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.pro.license.keymgr.e$3", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.pro.license.keymgr.DaticalTrueLicenseService", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.pro.license.keymgr.DaticalTrueLicenseService$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.pro.license.keymgr.e$6", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.pro.license.keymgr.e$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.pro.license.keymgr.e$7", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.pro.license.keymgr.e$5", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.Liquibase$17", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.Scope", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.Liquibase$11", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.CatalogAndSchema", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.license.LocationType", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.license.Location", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.license.LicenseInstallResult", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.license.Location$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.license.LicenseServiceFactory", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.license.LicenseServiceUtils", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.license.LicenseService", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.integration.servlet.LiquibaseServletListener", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.integration.servlet.LiquibaseServletListener$ServletValueContainer", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.integration.servlet.LiquibaseStatusServlet", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.integration.IntegrationDetails", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.integration.commandline.CommandLineResourceAccessor", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.integration.commandline.Main$FILE_SUFFIXES", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.integration.commandline.Main$OPTIONS", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.integration.commandline.Main$CodePointCheck", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.integration.commandline.Main", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.integration.commandline.Main$SecureLogFilter", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.integration.commandline.Main$2", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.integration.commandline.ChangeExecListenerUtils", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.integration.commandline.Main$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.integration.commandline.Main$COMMANDS", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.integration.commandline.CommandLineUtils", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.integration.commandline.Main$3", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.integration.spring.MultiTenantSpringLiquibase", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.integration.spring.SpringLiquibase", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.integration.spring.SpringResourceAccessor", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.structure.DatabaseObjectComparator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.structure.AbstractDatabaseObject", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.structure.DatabaseObject", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.structure.DatabaseLevelObject", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.structure.DatabaseObjectCollection$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.structure.DatabaseObjectCollection", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.structure.CatalogLevelObject", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.structure.core.View", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.structure.core.DataType", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.structure.core.Column", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.structure.core.Data", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.structure.core.ForeignKey", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.structure.core.Catalog", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.structure.core.StoredDatabaseLogic", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.structure.core.ForeignKey$3", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.structure.core.Schema", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.structure.core.ForeignKey$2", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.structure.core.Index", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.structure.core.ForeignKey$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.structure.core.ForeignKeyConstraintType", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.structure.core.Sequence", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.structure.core.UniqueConstraint$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.structure.core.UniqueConstraint", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.structure.core.Column$AutoIncrementInformation", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.structure.core.DatabaseObjectFactory", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.structure.core.StoredProcedure", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.structure.core.Table", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.structure.core.DataType$ColumnSizeUnit", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.structure.core.Relation", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.structure.core.ForeignKey$4", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.structure.core.PrimaryKey", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.structure.core.PrimaryKey$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.servicelocator.PrioritizedService", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.servicelocator.ServiceLocator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.servicelocator.LiquibaseService", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.servicelocator.StandardServiceLocator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.ObjectMetaData", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.Scope$Attr", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.Liquibase$6", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.Liquibase$16", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.ColumnConfig$ValueNumeric", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.ChangeWithColumns", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.Change", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.DatabaseChangeNote", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.CheckSum", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.AbstractChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.ChangeStatus", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.ChangeFactory", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.DatabaseChangeProperty", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.AbstractSQLChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.ChangeStatus$Status", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.ChangeMetaData", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.ColumnConfig", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.DatabaseChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.CheckSum$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.custom.CustomTaskRollback", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.custom.CustomSqlChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.custom.CustomSqlRollback", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.custom.CustomChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.custom.CustomChangeWrapper", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.custom.CustomTaskChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.ChangeParameterMetaData", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.AbstractSQLChange$NormalizingStream", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.AddColumnConfig", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.core.AddForeignKeyConstraintChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.core.RenameSequenceChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.core.MergeColumnChange$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.core.ExecuteShellCommandChange$2", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.core.DropNotNullConstraintChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.core.DropDefaultValueChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.core.RawSQLChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.core.SetTableRemarksChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.core.TagDatabaseChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.core.AddLookupTableChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.core.RenameColumnChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.core.ExecuteShellCommandChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.core.LoadDataColumnConfig", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.core.DropUniqueConstraintChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.core.OutputChange$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.core.AddUniqueConstraintChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.core.AbstractModifyDataChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.core.DropPrimaryKeyChange$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.core.DropTableChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.core.CreateIndexChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.core.SQLFileChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.core.CreateSequenceChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.core.EmptyChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.core.DropViewChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.core.DeleteDataChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.core.SetColumnRemarksChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.core.AddAutoIncrementChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.core.CreateTableChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.core.ModifyDataTypeChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.core.AddColumnChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.core.ExecuteShellCommandChange$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.core.RenameTableChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.core.AddNotNullConstraintChange$SQLiteAlterTableVisitor", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.core.AddDefaultValueChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.core.CreateViewChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.core.StopChange$StopChangeException", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.core.DropIndexChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.core.DropPrimaryKeyChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.core.UpdateDataChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.core.AddNotNullConstraintChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.core.DropColumnChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.core.MergeColumnChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.core.LoadDataChange$LOAD_DATA_TYPE", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.core.LoadDataChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.core.RenameViewChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.core.ExecuteShellCommandChange$StreamGobbler", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.core.AddPrimaryKeyChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.core.LoadUpdateDataChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.core.DropForeignKeyConstraintChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.core.StopChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.core.DropColumnChange$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.core.InsertDataChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.core.CreateProcedureChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.core.StopChange$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.core.AlterSequenceChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.core.DropAllForeignKeyConstraintsChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.core.OutputChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.core.DropSequenceChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.core.DropProcedureChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.ConstraintsConfig", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.change.DbmsTargetedChange", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.lockservice.LockServiceFactory", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.lockservice.StandardLockService", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.lockservice.DatabaseChangeLogLock", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.lockservice.LockServiceFactory$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.lockservice.MockLockService", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.lockservice.LockService", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.lockservice.LockServiceImpl", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.lockservice.OfflineLockService", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.Liquibase$12", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.Liquibase$18", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.Contexts", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.parser.ChangeLogParser", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.parser.LiquibaseParser", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.parser.SnapshotParserFactory$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.parser.NamespaceDetailsFactory$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.parser.NamespaceDetailsFactory$SerializerNamespaceDetailsComparator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.parser.SnapshotParserFactory", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.parser.NamespaceDetails", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.parser.ChangeLogParserFactory", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.parser.NamespaceDetailsFactory", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.parser.ChangeLogParserCofiguration", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.parser.SnapshotParser", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.parser.core.formattedsql.FormattedSqlChangeLogParser", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.parser.core.sql.SqlChangeLogParser", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.parser.core.ParsedNodeException", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.parser.core.ParsedNode", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.parser.core.yaml.YamlChangeLogParser", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.parser.core.yaml.YamlSnapshotParser", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.parser.core.yaml.YamlParser", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.parser.core.xml.XMLChangeLogSAXParser$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.parser.core.xml.XMLChangeLogSAXParser", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.parser.core.xml.StandardNamespaceDetails", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.parser.core.xml.LiquibaseEntityResolver", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.parser.core.xml.XMLChangeLogSAXHandler", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.parser.core.xml.AbstractChangeLogParser", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.parser.core.json.JsonChangeLogParser", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.parser.core.json.JsonSnapshotParser", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.Liquibase$20", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.ContextExpression", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.Liquibase", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.Liquibase$10", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.resource.FileSystemResourceAccessor$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.resource.CompositeResourceAccessor", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.resource.InputStreamList", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.resource.ClassLoaderResourceAccessor$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.resource.FileSystemResourceAccessor", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.resource.FileSystemResourceAccessor$CloseChildWillCloseParentStream", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.resource.ResourceAccessor", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.resource.URIResourceAccessor", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.resource.AbstractResourceAccessor", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.resource.ClassLoaderResourceAccessor", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.executor.LoggingExecutor$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.executor.Executor", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.executor.ExecutorService", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.executor.LoggingExecutor", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.executor.jvm.StatementCallback", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.executor.jvm.SqlParameter", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.executor.jvm.ResultSetExtractor", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.executor.jvm.JdbcExecutor$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.executor.jvm.ArgPreparedStatementSetter", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.executor.jvm.JdbcExecutor$ExecuteStatementCallback", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.executor.jvm.PreparedStatementSetter", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.executor.jvm.RowMapper", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.executor.jvm.JdbcExecutor", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.executor.jvm.PreparedStatementCallback", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.executor.jvm.SqlTypeValue", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.executor.jvm.RowCallbackHandler", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.executor.jvm.CallableStatementCallback", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.executor.jvm.JdbcExecutor$1UpdateStatementCallback", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.executor.jvm.JdbcExecutor$QueryCallableStatementCallback", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.executor.jvm.StatementCreatorUtils", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.executor.jvm.ColumnMapRowMapper", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.executor.jvm.RowMapperNotNullConstraintsResultSetExtractor", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.executor.jvm.SingleColumnRowMapper", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.executor.jvm.RowMapperResultSetExtractor", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.executor.jvm.JdbcExecutor$QueryStatementCallback", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.executor.jvm.SqlParameterValue", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.executor.jvm.ArgTypePreparedStatementSetter", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.executor.AbstractExecutor", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.executor.LoggingExecutor$NoopWriter", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData$5", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.snapshot.SnapshotIdService", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.snapshot.ResultSetCache$SingleResultSetExtractor", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData$2", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.snapshot.RestoredDatabaseSnapshot", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.snapshot.SnapshotGeneratorComparator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.snapshot.SnapshotControl", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData$3", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.snapshot.SnapshotGeneratorChain", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.snapshot.SnapshotGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.snapshot.ResultSetCache$RowData", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData$4", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.snapshot.ResultSetCache$UnionResultSetExtractor", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData$GetColumnResultSetCache", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.snapshot.CachedRow", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.snapshot.SnapshotGeneratorFactory", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.snapshot.JdbcDatabaseSnapshot$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.snapshot.jvm.SchemaSnapshotGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.snapshot.jvm.PrimaryKeySnapshotGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.snapshot.jvm.DataSnapshotGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.snapshot.jvm.TableSnapshotGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.snapshot.jvm.ForeignKeySnapshotGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.snapshot.jvm.ColumnSnapshotGeneratorOracle", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.snapshot.jvm.JdbcSnapshotGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.snapshot.jvm.CatalogSnapshotGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.snapshot.jvm.SequenceSnapshotGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.snapshot.jvm.ViewSnapshotGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.snapshot.jvm.ColumnSnapshotGeneratorInformix", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.snapshot.jvm.ColumnSnapshotGeneratorPostgres", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.snapshot.jvm.ColumnSnapshotGeneratorH2", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.snapshot.jvm.ColumnSnapshotGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.snapshot.jvm.UniqueConstraintSnapshotGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.snapshot.jvm.IndexSnapshotGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.snapshot.SnapshotListener", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData$ForeignKeysResultSetCache", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.snapshot.InvalidExampleException", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.snapshot.DatabaseSnapshot", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.snapshot.ResultSetCache$ResultSetExtractor$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData$GetNotNullConstraintsResultSetCache$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.snapshot.ResultSetCache", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.snapshot.ResultSetCache$ResultSetExtractor", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.snapshot.JdbcDatabaseSnapshot", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.snapshot.EmptyDatabaseSnapshot", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData$GetNotNullConstraintsResultSetCache", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.Liquibase$8", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.Liquibase$14", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.LabelExpression", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.ui.LoggerUIService", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.ui.MockConsoleWrapper", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.ui.UIService", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.ui.ConsoleUIService$ConsoleWrapper", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.ui.DefaultInputHandler", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.ui.InputHandler", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.ui.UIServiceFactory", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.ui.ConsoleUIService", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.Liquibase$14$2", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.Liquibase$22", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.ExecutablePreparedStatementBase", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.CompoundStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.ExecutablePreparedStatementBase$LOBContent", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.InsertExecutablePreparedStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.ExecutablePreparedStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.AbstractSqlStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.SqlStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.DatabaseFunction", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.StoredProcedureStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.CallableSqlStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.SequenceNextValueFunction", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.PrimaryKeyConstraint", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.UniqueConstraint", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.AutoIncrementConstraint", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.ColumnConstraint", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.ForeignKeyConstraint", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.BatchDmlExecutablePreparedStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.core.DeleteStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.core.AddForeignKeyConstraintStatement$2", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.core.AddForeignKeyConstraintStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.core.DropProcedureStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.core.RenameViewStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.core.CopyRowsStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.core.UpdateChangeSetChecksumStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.core.SetNullableStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.core.AddDefaultValueStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.core.SetColumnRemarksStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.core.CreateViewStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.core.ClearDatabaseChangeLogTableStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.core.SelectFromDatabaseChangeLogStatement$ByNotNullCheckSum", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.core.ReindexStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.core.SetTableRemarksStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.core.RemoveChangeSetRanStatusStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.core.DropPrimaryKeyStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.core.DropColumnStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.core.CreateProcedureStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.core.DropIndexStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.core.SelectFromDatabaseChangeLogLockStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.core.MarkChangeSetRanStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.core.InsertSetStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.core.RenameColumnStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.core.InsertOrUpdateStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.core.TagDatabaseStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.core.DropDefaultValueStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.core.InitializeDatabaseChangeLogLockTableStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.core.DropViewStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.core.DropSequenceStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.core.TableRowCountStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.core.AddPrimaryKeyStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.core.AddColumnStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.core.FindForeignKeyConstraintsStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.core.InsertStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.core.GetNextChangeSetSequenceValueStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.core.AlterSequenceStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.core.CreateDatabaseChangeLogLockTableStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.core.RuntimeStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.core.AddAutoIncrementStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.core.AddUniqueConstraintStatement$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.core.RawCallStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.core.RenameSequenceStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.core.CreateSequenceStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.core.DropForeignKeyConstraintStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.core.ReorganizeTableStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.core.LockDatabaseChangeLogStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.core.ModifyDataTypeStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.core.UnlockDatabaseChangeLogStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.core.SelectFromDatabaseChangeLogStatement$WhereClause", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.core.SelectFromDatabaseChangeLogStatement$ByTag", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.core.UpdateStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.core.DropUniqueConstraintStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.core.SelectFromDatabaseChangeLogStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.core.CommentStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.core.AddForeignKeyConstraintStatement$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.core.DropTableStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.core.CreateDatabaseChangeLogTableStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.core.CreateIndexStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.core.RawSqlStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.core.CreateTableStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.core.AddUniqueConstraintStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.core.GetViewDefinitionStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.core.RenameTableStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.NotNullConstraint", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.SequenceCurrentValueFunction", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.statement.UpdateExecutablePreparedStatement", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.Liquibase$RollbackMessageType", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.ScopeManager", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.Liquibase$19", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sdk.supplier.resource.ResourceSupplier$SimpleResourceAccessor", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sdk.supplier.resource.ResourceSupplier$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sdk.supplier.resource.ResourceSupplier", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sdk.resource.MockResourceAccessor", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sdk.executor.MockExecutor", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sdk.exception.UnexpectedLiquibaseSdkException", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sdk.convert.ConvertCommand", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.CatalogAndSchema$CatalogAndSchemaCase", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.Liquibase$2", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.Scope$ScopedRunner", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.Liquibase$15", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.ObjectMetaData$Attribute", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.changelog.ChangeSet$ExecType", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.changelog.ChangeLogParameters$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.changelog.ChangeLogIterator$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.changelog.visitor.ValidatingVisitor", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.changelog.visitor.ChangeSetVisitor$Direction", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.changelog.visitor.ChangeLogSyncVisitor", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.changelog.visitor.SkippedChangeSetVisitor", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.changelog.visitor.ListVisitor", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.changelog.visitor.DetermineNumberChangesFollowingVisitor", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.changelog.visitor.ExpectedChangesVisitor", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.changelog.visitor.DBDocVisitor$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.changelog.visitor.ChangeExecListener", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.changelog.visitor.LoggingChangeExecListener", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.changelog.visitor.RollbackVisitor", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.changelog.visitor.DBDocVisitor", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.changelog.visitor.ChangeSetVisitor", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.changelog.visitor.UpdateVisitor", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.changelog.visitor.RollbackListVisitor", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.changelog.visitor.StatusVisitor", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.changelog.visitor.DBDocVisitor$ChangeLogInfo", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.changelog.visitor.AbstractChangeExecListener", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.changelog.visitor.ChangeLogSyncListener", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.changelog.AbstractChangeLogHistoryService", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.changelog.OfflineChangeLogHistoryService$ReplaceChangeSetLogic", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.changelog.StandardChangeLogHistoryService", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.changelog.RanChangeSet", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.changelog.ChangeSet$ValidationFailOption", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.changelog.ChangeLogParameters", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.changelog.IncludeAllFilter", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.changelog.DatabaseChangeLog$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.changelog.ChangeLogIterator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.changelog.OfflineChangeLogHistoryService$Columns", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.changelog.ChangeSet$RunStatus", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.changelog.OfflineChangeLogHistoryService$2", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.changelog.ChangeLogParameters$ExpressionExpander", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.changelog.column.LiquibaseColumn", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.changelog.ChangeLogHistoryServiceFactory$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.changelog.ChangeSetStatus", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.changelog.OfflineChangeLogHistoryService$3", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.changelog.ChangeLogChild", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.changelog.ChangeLogIncludeAll", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.changelog.OfflineChangeLogHistoryService$4", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.changelog.ChangelogRewriter", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.changelog.filter.IgnoreChangeSetFilter", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.changelog.filter.ActuallyExecutedChangeSetFilter", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.changelog.filter.ExecutedAfterChangeSetFilter", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.changelog.filter.ChangeSetFilterResult", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.changelog.filter.ShouldRunChangeSetFilter", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.changelog.filter.AfterTagChangeSetFilter", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.changelog.filter.CountChangeSetFilter", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.changelog.filter.UpToTagChangeSetFilter", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.changelog.filter.AlreadyRanChangeSetFilter", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.changelog.filter.ContextChangeSetFilter", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.changelog.filter.ChangeSetFilter", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.changelog.filter.RanChangeSetFilter", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.changelog.filter.NotRanChangeSetFilter", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.changelog.filter.DbmsChangeSetFilter", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.changelog.filter.NotInChangeLogChangeSetFilter", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.changelog.filter.LabelChangeSetFilter", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.changelog.OfflineChangeLogHistoryService$5", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.changelog.ChangeLogInclude", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.changelog.OfflineChangeLogHistoryService", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.changelog.ChangeLogIterator$2", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.changelog.ChangeSet", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.changelog.DatabaseChangeLog", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.changelog.ChangeLogHistoryService", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.changelog.OfflineChangeLogHistoryService$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.changelog.ChangeLogProperty", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.changelog.ChangelogRewriter$ChangeLogRewriterResult", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.changelog.MockChangeLogHistoryService", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.changelog.ChangeLogParameters$ChangeLogParameter", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.changelog.RollbackContainer", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.changelog.ChangeLogHistoryServiceFactory", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.DiffGeneratorFactory", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.ObjectDifferences$StandardCompareFunction", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.ObjectDifferences$ToStringCompareFunction", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.DiffResult", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.ObjectDifferences$OrderedCollectionCompareFunction", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.output.StandardObjectChangeFilter$FilterType", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.output.DiffOutputControl$DatabaseForHash", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.output.DiffOutputControl", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.output.report.DiffToReport$2", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.output.report.DiffToReport", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.output.report.DiffToReport$3", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.output.report.DiffToReport$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.output.ObjectChangeFilter", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.output.DiffOutputControl$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.output.changelog.DiffToChangeLog$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.output.changelog.ChangeGeneratorComparator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.output.changelog.ChangeGeneratorChain", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.output.changelog.DiffToChangeLog$15", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.output.changelog.DiffToChangeLog$10", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.output.changelog.DiffToChangeLog", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.output.changelog.DiffToChangeLog$5", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.output.changelog.AbstractChangeGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.output.changelog.DiffToChangeLog$3", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.output.changelog.DiffToChangeLog$13", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.output.changelog.DiffToChangeLog$11", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.output.changelog.DiffToChangeLog$12", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.output.changelog.ChangedObjectChangeGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.output.changelog.DiffToChangeLog$7", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.output.changelog.UnexpectedObjectChangeGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.output.changelog.DiffToChangeLog$4", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.output.changelog.DiffToChangeLog$DependencyGraph$Node", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.output.changelog.DiffToChangeLog$DependencyGraph", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.output.changelog.MissingObjectChangeGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.output.changelog.DiffToChangeLog$DependencyGraph$Edge", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.output.changelog.ChangeGeneratorFactory", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.output.changelog.DiffToChangeLog$9", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.output.changelog.DiffToChangeLog$14", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.output.changelog.core.ChangedColumnChangeGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.output.changelog.core.ChangedSequenceChangeGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.output.changelog.core.MissingPrimaryKeyChangeGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.output.changelog.core.MissingIndexChangeGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.output.changelog.core.UnexpectedViewChangeGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.output.changelog.core.MissingForeignKeyChangeGenerator$2", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.output.changelog.core.ChangedIndexChangeGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.output.changelog.core.ChangedForeignKeyChangeGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.output.changelog.core.UnexpectedForeignKeyChangeGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.output.changelog.core.ChangedUniqueConstraintChangeGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.output.changelog.core.ChangedViewChangeGenerator$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.output.changelog.core.ChangedViewChangeGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.output.changelog.core.MissingDataExternalFileChangeGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.output.changelog.core.ChangedTableChangeGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.output.changelog.core.MissingForeignKeyChangeGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.output.changelog.core.UnexpectedUniqueConstraintChangeGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.output.changelog.core.UnexpectedTableChangeGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.output.changelog.core.MissingDataChangeGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.output.changelog.core.MissingUniqueConstraintChangeGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.output.changelog.core.ChangedIndexChangeGenerator$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.output.changelog.core.ChangedForeignKeyChangeGenerator$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.output.changelog.core.MissingColumnChangeGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.output.changelog.core.ChangedPrimaryKeyChangeGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.output.changelog.core.UnexpectedSequenceChangeGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.output.changelog.core.UnexpectedPrimaryKeyChangeGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.output.changelog.core.MissingViewChangeGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.output.changelog.core.MissingTableChangeGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.output.changelog.core.MissingForeignKeyChangeGenerator$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.output.changelog.core.MissingSequenceChangeGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.output.changelog.core.UnexpectedColumnChangeGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.output.changelog.core.MissingViewChangeGenerator$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.output.changelog.core.UnexpectedIndexChangeGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.output.changelog.DiffToChangeLog$DependencyGraph$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.output.changelog.DiffToChangeLog$2", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.output.changelog.DiffToChangeLog$6", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.output.changelog.DiffToChangeLog$8", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.output.changelog.ChangeGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.output.StandardObjectChangeFilter$Filter", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.output.StandardObjectChangeFilter", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.ObjectDifferences$DatabaseObjectNameCompareFunction", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.DiffGeneratorFactory$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.ObjectDifferences$CompareFunction", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.ObjectDifferences", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.ObjectDifferences$DataTypeCompareFunction", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.core.StandardDiffGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.StringDiff", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.DiffStatusListener", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.compare.DatabaseObjectComparator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.compare.CompareControl$DatabaseRole", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.compare.DatabaseObjectComparatorComparator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.compare.DatabaseObjectComparatorChain", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.compare.DatabaseObjectComparatorFactory", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.compare.CompareControl", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.compare.CompareControl$SchemaComparison", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.compare.CompareControl$ComputedSchemas", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.compare.core.IndexComparator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.compare.core.CommonCatalogSchemaComparator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.compare.core.ForeignKeyComparator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.compare.core.ColumnComparator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.compare.core.DefaultDatabaseObjectComparator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.compare.core.IndexComparator$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.compare.core.UniqueConstraintComparator$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.compare.core.PrimaryKeyComparator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.compare.core.TableComparator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.compare.core.SchemaComparator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.compare.core.UniqueConstraintComparator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.compare.core.PrimaryKeyComparator$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.compare.core.ForeignKeyComparator$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.compare.core.CatalogComparator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.Difference", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.DiffGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.diff.ObjectDifferences$UnOrderedCollectionCompareFunction", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.ExtensibleObject", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.database.Database", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.database.PreparedStatementFactory", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.database.ConnectionServiceFactory", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.database.LiquibaseExtDriver", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.database.OfflineConnection", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.database.jvm.HsqlConnection", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.database.jvm.SybaseASAConnection", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.database.jvm.SybaseConnection", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.database.jvm.JdbcConnection", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.database.jvm.DerbyConnection", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.database.ObjectQuotingStrategy", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.database.ConnectionServiceFactory$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.database.DatabaseConnection", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.database.DatabaseFactory$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.database.InternalDatabase", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.database.DatabaseFactory$DatabaseComparator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.database.DatabaseFactory", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.database.DatabaseList", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.database.MockDatabaseConnection", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.database.core.MockDatabase", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.database.core.OracleDatabase", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.database.core.H2Database", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.database.core.PostgresDatabase$DbTypes", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.database.core.HsqlDatabase", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.database.core.DatabaseUtils", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.database.core.SQLiteDatabase", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.database.core.DerbyDatabase", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.database.core.MSSQLDatabase", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.database.core.AbstractDb2Database", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.database.core.MariaDBDatabase", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.database.core.MSSQLDatabase$MSSQL_SERVER_VERSIONS", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.database.core.SybaseASADatabase", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.database.core.MySQLDatabase", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.database.core.PostgresDatabase", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.database.core.SybaseDatabase", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.database.core.CockroachDatabase", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.database.core.SQLiteDatabase$AlterTableVisitor", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.database.core.UnsupportedDatabase", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.database.core.DB2Database", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.database.core.FirebirdDatabase", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.database.core.Ingres9Database", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.database.core.Firebird3Database", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.database.core.Db2zDatabase", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.database.core.InformixDatabase", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.database.AbstractJdbcDatabase", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.database.OfflineConnection$OutputLiquibaseSql", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.SqlGeneratorFactory", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.SqlGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.SqlGeneratorChain", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.SqlGeneratorComparator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.CreateIndexGeneratorFirebird", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.SelectFromDatabaseChangeLogGenerator$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.UnlockDatabaseChangeLogGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.TableRowCountGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.SetTableRemarksGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.GetViewDefinitionGeneratorDB2", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.AddAutoIncrementGeneratorInformix", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.CreateIndexGeneratorFirebird$ColumnAnalysisResult", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.AddColumnGeneratorDefaultClauseBeforeNotNull", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.SelectFromDatabaseChangeLogGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.InsertSetGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.AbstractSqlGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.InsertOrUpdateGeneratorOracle", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.CreateProcedureGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.DropPrimaryKeyGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.AddDefaultValueGeneratorSybase", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.AddAutoIncrementGeneratorHsqlH2", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.DropProcedureGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.AddDefaultValueGeneratorInformix", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.InsertOrUpdateGeneratorSQLite", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.CreateTableGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.CreateDatabaseChangeLogTableGeneratorSybase", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.ModifyDataTypeGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.AddPrimaryKeyGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.CreateViewGeneratorInformix", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.AddDefaultValueGeneratorMSSQL", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.GetViewDefinitionGeneratorInformix", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.RemoveChangeSetRanStatusGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.GetViewDefinitionGeneratorFirebird", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.GetViewDefinitionGeneratorOracle", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.DropColumnGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.InsertGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.ClearDatabaseChangeLogTableGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.InsertOrUpdateGeneratorMySQL", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.AlterSequenceGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.AddForeignKeyConstraintGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.AddDefaultValueGeneratorSQLite", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.GetViewDefinitionGeneratorSybase", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.InsertOrUpdateGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.MarkChangeSetRanGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.AddColumnGeneratorSQLite", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.AddAutoIncrementGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.DeleteGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.GetViewDefinitionGeneratorHsql", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.RenameViewGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.InsertOrUpdateGeneratorHsql", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.ReorganizeTableGeneratorDB2", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.DropTableGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.ReindexGeneratorSQLite", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.RawSqlGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.InsertOrUpdateGeneratorDB2", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.AddDefaultValueGeneratorDerby", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.UpdateDataChangeGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.AddColumnGeneratorSQLite$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.AddColumnGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.GetViewDefinitionGeneratorPostgres", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.RenameSequenceGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.RenameTableGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.AddAutoIncrementGeneratorSQLite", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.GetNextChangeSetSequenceValueGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.AddDefaultValueGeneratorSybaseASA", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.DropUniqueConstraintGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.AddDefaultValueGeneratorSQLite$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.TagDatabaseGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.AddUniqueConstraintGeneratorTDS", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.AddAutoIncrementGeneratorSQLite$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.SelectFromDatabaseChangeLogLockGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.SelectFromDatabaseChangeLogLockGenerator$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.RenameColumnGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.CreateDatabaseChangeLogTableGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.DropViewGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.CopyRowsGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.SetColumnRemarksGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.UpdateChangeSetChecksumGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.InsertOrUpdateGeneratorMSSQL", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.DropIndexGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.InsertOrUpdateGeneratorInformix", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.DropDefaultValueGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.InsertOrUpdateGeneratorPostgres", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.AddAutoIncrementGeneratorDB2", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.AddDefaultValueGeneratorPostgres", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.DropSequenceGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.InsertOrUpdateGeneratorSybaseASA", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.CreateTableGeneratorInformix", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.StoredProcedureGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.InsertDataChangeGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.DropForeignKeyConstraintGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.InitializeDatabaseChangeLogLockTableGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.GetViewDefinitionGeneratorSybaseASA", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.GetViewDefinitionGeneratorDerby", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.CreateSequenceGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.AddDefaultValueGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.LockDatabaseChangeLogGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.InsertOrUpdateGeneratorH2", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.UpdateGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.GetViewDefinitionGeneratorMSSQL", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.CreateViewGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.SetNullableGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.CreateIndexGeneratorFirebird$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.AddDefaultValueGeneratorOracle", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.CreateIndexGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.CreateIndexGeneratorPostgres", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.CommentGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.AddDefaultValueGeneratorMySQL", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.AddUniqueConstraintGeneratorInformix", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.GetViewDefinitionGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.CreateDatabaseChangeLogLockTableGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.AddAutoIncrementGeneratorMySQL", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.RuntimeGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.BatchDmlExecutablePreparedStatementGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.AddPrimaryKeyGeneratorInformix", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.sqlgenerator.core.AddUniqueConstraintGenerator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.exception.DateParseException", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.exception.LockException", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.exception.ServiceNotFoundException", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.exception.CustomPreconditionErrorException", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.exception.RollbackImpossibleException", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.exception.LiquibaseParseException", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.exception.PreconditionErrorException", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.exception.UnexpectedLiquibaseException", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.exception.Warnings", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.exception.CommandLineParsingException", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.exception.ChangeLogParseException", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.exception.DatabaseHistoryException", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.exception.LiquibaseException", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.exception.StatementNotSupportedOnDatabaseException", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.exception.ValidationFailedException", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.exception.MigrationFailedException", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.exception.ValidationErrors", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.exception.CustomPreconditionFailedException", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.exception.ChangeNotFoundException", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.exception.RollbackFailedException", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.exception.DatabaseException", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.exception.CustomChangeException", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.exception.DuplicateStatementIdentifierException", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.exception.DuplicateChangeSetException", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.exception.DatabaseIncapableOfOperation", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.exception.SetupException", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.exception.PreconditionFailedException", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.exception.UnknownFormatException", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.exception.UnknownChangelogFormatException", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.exception.InvalidChangeDefinitionException", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.plugin.PluginFactory", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.plugin.AbstractPlugin", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.plugin.Plugin", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.plugin.AbstractPluginFactory", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.datatype.DatabaseDataType", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.datatype.DataTypeFactory", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.datatype.DataTypeInfo", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.datatype.core.BlobType", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.datatype.core.TimestampType", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.datatype.core.XMLType", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.datatype.core.MediumIntType", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.datatype.core.DatabaseFunctionType", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.datatype.core.NumberType", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.datatype.core.CharType", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.datatype.core.ClobType", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.datatype.core.UUIDType", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.datatype.core.BooleanType", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.datatype.core.TinyIntType", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.datatype.core.DateType", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.datatype.core.DateTimeType", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.datatype.core.TimeType", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.datatype.core.NVarcharType", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.datatype.core.NCharType", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.datatype.core.SmallIntType", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.datatype.core.IntType", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.datatype.core.DoubleType", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.datatype.core.BigIntType", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.datatype.core.CurrencyType", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.datatype.core.FloatType", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.datatype.core.UnknownType", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.datatype.core.VarcharType", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.datatype.core.DecimalType", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.datatype.LiquibaseDataType", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.example.StartH2Main", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.Liquibase$21", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.SingletonScopeManager", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.Liquibase$7", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.RuntimeEnvironment", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.Liquibase$9", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.logging.LogMessageFilter", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.logging.LogFactory", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.logging.Logger", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.logging.LogService", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.logging.core.BufferedLogService$BufferedLogMessage", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.logging.core.BufferedLogger", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.logging.core.JavaLogService", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.logging.core.JavaLogger", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.logging.core.CompositeLogService", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.logging.core.AbstractLogger", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.logging.core.BufferedLogService", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.logging.core.DefaultLogMessageFilter", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.logging.core.LogServiceFactory", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.logging.core.DefaultLoggerConfiguration", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.logging.core.AbstractLogService", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.logging.core.CompositeLogger", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.serializer.AbstractLiquibaseSerializable", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.serializer.LiquibaseSerializer", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.serializer.ChangeLogSerializer", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.serializer.ChangeLogSerializerFactory", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.serializer.LiquibaseSerializable", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.serializer.SnapshotSerializerFactory", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.serializer.core.string.StringSnapshotSerializerReadable$3", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.serializer.core.string.StringSnapshotSerializerReadable", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.serializer.core.string.StringChangeLogSerializer$FieldFilter", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.serializer.core.string.StringSnapshotSerializerReadable$2", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.serializer.core.string.StringSnapshotSerializerReadable$4", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.serializer.core.string.StringChangeLogSerializer", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.serializer.core.string.StringSnapshotSerializerReadable$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.serializer.core.string.StringSnapshotSerializer", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.serializer.core.formattedsql.FormattedSqlChangeLogSerializer", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.serializer.core.yaml.YamlSerializer", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.serializer.core.yaml.YamlChangeLogSerializer$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.serializer.core.yaml.YamlSnapshotSerializer$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.serializer.core.yaml.YamlSerializer$LiquibaseRepresenter$AsStringRepresenter", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.serializer.core.yaml.YamlChangeLogSerializer", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.serializer.core.yaml.YamlSerializer$LiquibaseResolver", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.serializer.core.yaml.YamlSnapshotSerializer", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.serializer.core.yaml.YamlSnapshotSerializer$SnapshotLiquibaseRepresenter$TypeStoringAsStringRepresenter", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.serializer.core.yaml.YamlChangeLogSerializer$ChangeSetComparator", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.serializer.core.yaml.YamlSnapshotSerializer$SnapshotLiquibaseRepresenter", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.serializer.core.yaml.YamlSerializer$1", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.serializer.core.yaml.YamlSerializer$LiquibaseRepresenter", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.serializer.core.yaml.YamlSerializer$LiquibaseRepresenter$LiquibaseProperty", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.serializer.core.xml.XMLChangeLogSerializer", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.serializer.core.json.JsonChangeLogSerializer", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.serializer.core.json.JsonSnapshotSerializer", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.serializer.ReflectionSerializer", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.serializer.LiquibaseSerializable$SerializationType", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.serializer.SnapshotSerializer", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.listener.SqlListener", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "liquibase.listener.LiquibaseListener", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{ "name" : "com.sun.org.apache.xerces.internal.impl.dv.xs.SchemaDVFactoryImpl", "allDeclaredConstructors" : true, "allDeclaredMethods" : true, "allDeclaredClasses" : true },
	{
		"name" : "org.mariadb.jdbc.util.Options",
		"allDeclaredConstructors" : true,
		"allPublicConstructors" : true,
		"allDeclaredMethods" : true,
		"allPublicMethods" : true,
		"allDeclaredClasses" : true,
		"allPublicClasses" : true,
		"fields": [
			{"name": "user", "allowWrite": true},
			{"name": "password", "allowWrite": true},
			{"name": "trustServerCertificate", "allowWrite": true},
			{"name": "serverSslCert", "allowWrite": true},
			{"name": "trustStore", "allowWrite": true},
			{"name": "trustStoreType", "allowWrite": true},
			{"name": "keyStoreType", "allowWrite": true},
			{"name": "trustStorePassword", "allowWrite": true},
			{"name": "keyStore", "allowWrite": true},
			{"name": "keyStorePassword", "allowWrite": true},
			{"name": "keyPassword", "allowWrite": true},
			{"name": "enabledSslProtocolSuites", "allowWrite": true},
			{"name": "useFractionalSeconds", "allowWrite": true},
			{"name": "pinGlobalTxToPhysicalConnection", "allowWrite": true},
			{"name": "socketFactory", "allowWrite": true},
			{"name": "connectTimeout", "allowWrite": true},
			{"name": "pipe", "allowWrite": true},
			{"name": "localSocket", "allowWrite": true},
			{"name": "sharedMemory", "allowWrite": true},
			{"name": "tcpNoDelay", "allowWrite": true},
			{"name": "tcpKeepAlive", "allowWrite": true},
			{"name": "tcpRcvBuf", "allowWrite": true},
			{"name": "tcpSndBuf", "allowWrite": true},
			{"name": "tcpAbortiveClose", "allowWrite": true},
			{"name": "localSocketAddress", "allowWrite": true},
			{"name": "socketTimeout", "allowWrite": true},
			{"name": "allowMultiQueries", "allowWrite": true},
			{"name": "trackSchema", "allowWrite": true},
			{"name": "rewriteBatchedStatements", "allowWrite": true},
			{"name": "useCompression", "allowWrite": true},
			{"name": "interactiveClient", "allowWrite": true},
			{"name": "passwordCharacterEncoding", "allowWrite": true},
			{"name": "blankTableNameMeta", "allowWrite": true},
			{"name": "credentialType", "allowWrite": true},
			{"name": "useSsl", "allowWrite": true},
			{"name": "enabledSslCipherSuites", "allowWrite": true},
			{"name": "sessionVariables", "allowWrite": true},
			{"name": "tinyInt1isBit", "allowWrite": true},
			{"name": "yearIsDateType", "allowWrite": true},
			{"name": "createDatabaseIfNotExist", "allowWrite": true},
			{"name": "serverTimezone", "allowWrite": true},
			{"name": "nullCatalogMeansCurrent", "allowWrite": true},
			{"name": "dumpQueriesOnException", "allowWrite": true},
			{"name": "useOldAliasMetadataBehavior", "allowWrite": true},
			{"name": "useMysqlMetadata", "allowWrite": true},
			{"name": "allowLocalInfile", "allowWrite": true},
			{"name": "cachePrepStmts", "allowWrite": true},
			{"name": "prepStmtCacheSize", "allowWrite": true},
			{"name": "prepStmtCacheSqlLimit", "allowWrite": true},
			{"name": "useLegacyDatetimeCode", "allowWrite": true},
			{"name": "useAffectedRows", "allowWrite": true},
			{"name": "maximizeMysqlCompatibility", "allowWrite": true},
			{"name": "useServerPrepStmts", "allowWrite": true},
			{"name": "continueBatchOnError", "allowWrite": true},
			{"name": "jdbcCompliantTruncation", "allowWrite": true},
			{"name": "cacheCallableStmts", "allowWrite": true},
			{"name": "callableStmtCacheSize", "allowWrite": true},
			{"name": "connectionAttributes", "allowWrite": true},
			{"name": "useBatchMultiSend", "allowWrite": true},
			{"name": "useBatchMultiSendNumber", "allowWrite": true},
			{"name": "usePipelineAuth", "allowWrite": true},
			{"name": "enablePacketDebug", "allowWrite": true},
			{"name": "useBulkStmts", "allowWrite": true},
			{"name": "disableSslHostnameVerification", "allowWrite": true},
			{"name": "autocommit", "allowWrite": true},
			{"name": "includeInnodbStatusInDeadlockExceptions", "allowWrite": true},
			{"name": "includeThreadDumpInDeadlockExceptions", "allowWrite": true},
			{"name": "servicePrincipalName", "allowWrite": true},
			{"name": "defaultFetchSize", "allowWrite": true},
			{"name": "nonMappedOptions", "allowWrite": true},
			{"name": "tlsSocketType", "allowWrite": true},
			{"name": "log", "allowWrite": true},
			{"name": "profileSql", "allowWrite": true},
			{"name": "maxQuerySizeToLog", "allowWrite": true},
			{"name": "slowQueryThresholdNanos", "allowWrite": true},
			{"name": "assureReadOnly", "allowWrite": true},
			{"name": "autoReconnect", "allowWrite": true},
			{"name": "failOnReadOnly", "allowWrite": true},
			{"name": "retriesAllDown", "allowWrite": true},
			{"name": "validConnectionTimeout", "allowWrite": true},
			{"name": "loadBalanceBlacklistTimeout", "allowWrite": true},
			{"name": "failoverLoopRetries", "allowWrite": true},
			{"name": "allowMasterDownConnection", "allowWrite": true},
			{"name": "galeraAllowedState", "allowWrite": true},
			{"name": "pool", "allowWrite": true},
			{"name": "poolName", "allowWrite": true},
			{"name": "maxPoolSize", "allowWrite": true},
			{"name": "minPoolSize", "allowWrite": true},
			{"name": "maxIdleTime", "allowWrite": true},
			{"name": "staticGlobal", "allowWrite": true},
			{"name": "registerJmxPool", "allowWrite": true},
			{"name": "poolValidMinDelay", "allowWrite": true},
			{"name": "useResetConnection", "allowWrite": true},
			{"name": "useReadAheadInput", "allowWrite": true},
			{"name": "serverRsaPublicKeyFile", "allowWrite": true},
			{"name": "allowPublicKeyRetrieval", "allowWrite": true},
			{"name": "ensureSocketState", "allowWrite": true}
		]
	}
]
